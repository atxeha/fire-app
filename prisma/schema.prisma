// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  username   String   @unique
  name       String
  password   String
  isStaff    Boolean
  isActive   Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Equipment Equipment[]
  Log       Log[]
}

model Firefighter {
  id            String            @id @default(cuid())
  employeeId    Int @unique
  name          String
  gender        String
  rank          String
  contactNumber Int
  email         String?
  status        FirefighterStatus @default(ACTIVE)
  address       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  equipmentLog EquipmentLog[]
}

enum FirefighterStatus {
  ACTIVE
  INACTIVE
  RETIRED
  ON_LEAVE
}

model Equipment {
  id            String          @id @default(cuid())
  equipmentCode String?         @unique
  equipmentName String
  quantity      Int
  unit          String          @default("pcs")
  status        EquipmentStatus @default(ACTIVE)
  userId        String
  updatedBy     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  equipmentLog EquipmentLog[]
}

enum EquipmentStatus {
  ACTIVE
  IN_REPAIR
  RETIRED
  LOST
}

model EquipmentLog {
  id            String   @id @default(cuid())
  equipmentId   String
  fireFighterId String
  releasedBy    String
  quantity      Int
  createdAt     DateTime @default(now())

  equipment   Equipment   @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  fireFighter Firefighter @relation(fields: [fireFighterId], references: [id], onDelete: Cascade)
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    String
  log       String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
